{
    "Install-ChocolateyPackage": {
        "prefix": "chocoInstallChocolateyPackage",
        "body": [
            "$ErrorActionPreference = 'Stop';",
            "",
            "$packageName= '${1:packageName}'",
            "$toolsDir   = \"$(Split-Path -parent $MyInvocation.MyCommand.Definition)\"",
            "$url        = '${2:DownloadUrl}'",
            "$url64      = '${3:64BitDownloadUrl}'",
            "",
            "$packageArgs = @{",
                "\tpackageName   = $packageName",
                "\tunzipLocation = $toolsDir",
                "\tfileType      = '${4:fileType}'",
                "\turl           = $url",
                "\turl64bit      = $url64",

                "\tsilentArgs    = \"${5:silentArgs}\"",
                "\tvalidExitCodes= @(${6:validExitCodes})",

                "\tsoftwareName  = '${7:softwareName}'",
                "\tchecksum      = '${8:checkSum}'",
                "\tchecksumType  = '${9:checkSumType}'",
                "\tchecksum64    = '${10:checkSum64}'",
                "\tchecksumType64= '${11:checkSum64Type}'",
            "}",
            "",
            "Install-ChocolateyPackage @packageArgs"
        ],
        "description": "Chocolatey Install-ChocolateyPackage Helper Function"
    },
        "Uninstall-ChocolateyPackage": {
        "prefix": "chocoUninstallChocolateyPackage",
        "body": [
            "$ErrorActionPreference = 'Stop';",
            "",
            "$packageName   = '${1:packageName}'",
            "$softwareName  = '${2:softwareName}*'",
            "$installerType = '${3:installerType}'", 
            "",
            "$silentArgs = '${4:silentArgs}'",
            "# https://msdn.microsoft.com/en-us/library/aa376931(v=vs.85).aspx",
            "$validExitCodes = @(${5:validExitCodes})",
            "if ($installerType -ne 'MSI') {",
                "\t$silentArgs = '${6:msiSilentArgs}'",             
                "\t$validExitCodes = @(${7:msiSilentArgs})",
            "}",
            "",
            "$uninstalled     = $false",
            "$local_key       = '${8:localKey}'",
            "$machine_key     = '${9:machineKey}'",
            "$machine_key6432 = '${10:machineKey6432}'",
            "",
            "$key = Get-ItemProperty -Path @($machine_key6432,$machine_key, $local_key) `",
            "                        -ErrorAction SilentlyContinue `",
            "         | ? { $_.DisplayName -like \"$softwareName\" }",
            "",
            "if ($key.Count -eq 1) {",
                "\t$key | % { ",
                    "\t\t$file = \"$($_.UninstallString)\"",
            "",
                        "\t\t\tif ($installerType -eq 'MSI') {",
                            "\t\t\t\t# The Product Code GUID is all that should be passed for MSI, and very ",
                            "\t\t\t\t# FIRST, because it comes directly after /x, which is already set in the", 
                            "\t\t\t\t# Uninstall-ChocolateyPackage msiargs (facepalm).",
                            "\t\t\t\t$silentArgs = \"$($_.PSChildName) $silentArgs\"",
            "",
                            "\t\t\t\t# Don't pass anything for file, it is ignored for msi (facepalm number 2)", 
                            "\t\t\t\t# Alternatively if you need to pass a path to an msi, determine that and", 
                            "\t\t\t\t# use it instead of the above in silentArgs, still very first",
                            "\t\t\t\t$file = ''",
                    "\t\t\t}",
            "",
                    "\t\t\tUninstall-ChocolateyPackage -PackageName $packageName `",
                    "                                -FileType $installerType `",
                    "                                -SilentArgs \"$silentArgs\" `",
                    "                                -ValidExitCodes $validExitCodes `",
                    "                                -File \"$file\"",
                "\t}",
            "} elseif ($key.Count -eq 0) {",
                "\tWrite-Warning \"$packageName has already been uninstalled by other means.\"",
            "} elseif ($key.Count -gt 1) {",
                "\tWrite-Warning \"$key.Count matches found!\"",
                "\tWrite-Warning \"To prevent accidental data loss, no programs will be uninstalled.\"",
                "\tWrite-Warning \"Please alert package maintainer the following keys were matched:\"",
                "\t$key | % {Write-Warning \"- $_.DisplayName\"}",
            "}"
        ],
        "description": "Chocolatey Uninstall-ChocolateyPackage Helper Function"
    }
}